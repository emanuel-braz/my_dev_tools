{
	"name": "deeplink",
	"displayName": "Mobile Dev Tools (Android / iOS)",
	"description": "Open deeplinks in emulators, push notifications, screen mirroring, WIFI debugging, Gist",
	"version": "0.0.22",
	"publisher": "emanuel-braz",
	"repository": {
		"type": "git",
		"url": "https://github.com/emanuel-braz/deeplink"
	},
	"icon": "images/deeplink-icon.png",
	"engines": {
		"vscode": "^1.29.0"
	},
	"categories": [
		"Other",
		"Snippets",
		"Debuggers",
		"Extension Packs",
    	"Programming Languages"
	],
	"keywords": [
		"todo",
		"todolist",
		"kanban",
		"task",
		"project",
		"management",
		"generate",
		"generator",
		"template",
		"webdev",
		"snippet",
		"file"
	],
	"main": "./out/extension.js",
	"contributes": {
		"configuration": {
        "type": "object",
        "title": "Task Board Settings",
        "properties": {
            "mdt.taskBoard.fileList": {
                "type": "string",
                "description": "Comma-separated list of files to be displayed on the task board.",
                "default": "TODO.board"
				}
			}
		},
		"commands": [
			{
				"category": "MDT",
				"title": "Open deep link (Android ü§ñ)",
				"command": "extension.androidDeeplink"
			},
			{
				"category": "MDT",
				"title": "Open deep link (iOS üçé)",
				"command": "extension.iosDeeplink",
				"enablement": "isMac"
			},
			{
				"category": "MDT",
				"title": "Clear the deeplink history",
				"command": "extension.deeplinkClearCache"
			},
			{
				"category": "MDT",
				"title": "Open the latest used deeplink",
				"command": "extension.lastPromptDeeplink",
				"enablement": "false"
			},
			{
				"category": "MDT",
				"title": "Send push notification (iOS üçé)",
				"command": "extension.iosPushNotification",
				"enablement": "isMac"
			},
			{
				"category": "MDT",
				"title": "Send push notification (Android ü§ñ)",
				"command": "extension.androidPushNotification"
			},
			{
				"category": "MDT",
				"title": "Send the latest used notification",
				"command": "extension.pushNotificationLastUsed"
			},
			{
				"category": "MDT",
				"title": "Mirror device screen (Android ü§ñ)",
				"command": "extension.androidMirrorScreen"
			},
			{
				"category": "MDT",
				"title": "Start Device (Android ü§ñ)",
				"command": "extension.startAndroidDevice"
			},
			{
				"category": "MDT",
				"title": "Start Device (iOS üçé)",
				"command": "extension.startIosDevice",
				"enablement": "isMac"
			},
			{
				"category": "MDT",
				"title": "Connect Wifi (Android ü§ñ)",
				"command": "extension.connectWifi"
			},
			{
				"category": "MDT",
				"title": "Disconnect Wifi (Android ü§ñ)",
				"command": "extension.disconnectWifi"
			},
			{
				"category": "MDT",
				"title": "Reconnect offline devices (Android ü§ñ)",
				"command": "extension.reconnectOfflineWifi"
			},
			{
				"category": "MDT",
				"title": "Show active devices",
				"command": "extension.showConnectedDevices"
			},
			{
				"category": "MDT",
				"title": "Run Project Gist (gist.json)",
				"command": "extension.runGistFromDisk"
			},
			{
				"category": "MDT",
				"title": "Run Gist Url",
				"command": "extension.runGistUrl"
			},
			{
				"category": "MDT",
				"title": "Run Public Gist User",
				"command": "extension.runGistFromUser"
			},
			{
				"category": "MDT",
				"title": "Run Favorite Gist",
				"command": "extension.runFavoriteGist"
			},
			{
				"category": "MDT",
				"title": "Update Favorite Gist",
				"command": "extension.setFavoriteGist"
			},
			{
				"category": "MDT",
				"title": "Clear Favorite Gist",
				"command": "extension.clearFavoriteGist"
			},
			{
				"category": "MDT",
				"title": "Open Task Board ‚úÖ",
				"command": "extension.openTaskBoard"
			},
			{
				"category": "MDT",
				"command": "mdt.dispose",
				"title": "Remove All Comments"
			},
			{
				"command": "mdt.createNote",
				"title": "Create Note",
				"enablement": "!commentIsEmpty"
			},
			{
				"command": "mdt.replyNote",
				"title": "Reply",
				"enablement": "!commentIsEmpty"
			},
			{
				"command": "mdt.editNote",
				"title": "Edit",
				"icon": {
					"dark": "resources/edit_inverse.svg",
					"light": "resources/edit.svg"
				}
			},
			{
				"command": "mdt.deleteNote",
				"title": "Delete",
				"icon": {
					"dark": "resources/close_inverse.svg",
					"light": "resources/close.svg"
				}
			},
			{
				"command": "mdt.deleteNoteComment",
				"title": "Delete",
				"icon": {
					"dark": "resources/close_inverse.svg",
					"light": "resources/close.svg"
				}
			},
			{
				"command": "mdt.saveNote",
				"title": "Save"
			},
			{
				"command": "mdt.cancelsaveNote",
				"title": "Cancel"
			},
			{
				"command": "mdt.startDraft",
				"title": "Start Draft",
				"enablement": "!commentIsEmpty"
			},
			{
				"command": "mdt.finishDraft",
				"title": "Finish Draft"
			}
		],
		"menus": {
			"commandPalette": [
				{
					"command": "mdt.createNote",
					"when": "false"
				},
				{
					"command": "mdt.replyNote",
					"when": "false"
				},
				{
					"command": "mdt.editNote",
					"when": "false"
				},
				{
					"command": "mdt.deleteNote",
					"when": "false"
				},
				{
					"command": "mdt.deleteNoteComment",
					"when": "false"
				},
				{
					"command": "mdt.saveNote",
					"when": "false"
				},
				{
					"command": "mdt.cancelsaveNote",
					"when": "false"
				},
				{
					"command": "mdt.startDraft",
					"when": "false"
				},
				{
					"command": "mdt.finishDraft",
					"when": "false"
				}
			],
			"comments/commentThread/title": [
				{
					"command": "mdt.deleteNote",
					"group": "navigation",
					"when": "commentController == comment-mdt && !commentThreadIsEmpty"
				}
			],
			"comments/commentThread/context": [
				{
					"command": "mdt.createNote",
					"group": "inline",
					"when": "commentController == comment-mdt && commentThreadIsEmpty"
				},
				{
					"command": "mdt.replyNote",
					"group": "inline",
					"when": "commentController == comment-mdt && !commentThreadIsEmpty"
				},
				{
					"command": "mdt.startDraft",
					"group": "inline",
					"when": "commentController == comment-mdt && commentThreadIsEmpty"
				},
				{
					"command": "mdt.finishDraft",
					"group": "inline",
					"when": "commentController == comment-mdt && commentThread == draft"
				}
			],
			"comments/comment/title": [
				{
					"command": "mdt.editNote",
					"group": "group@1",
					"when": "commentController == comment-mdt"
				},
				{
					"command": "mdt.deleteNoteComment",
					"group": "group@2",
					"when": "commentController == comment-mdt && comment == canDelete"
				}
			],
			"comments/comment/context": [
				{
					"command": "mdt.cancelsaveNote",
					"group": "inline@1",
					"when": "commentController == comment-mdt"
				},
				{
					"command": "mdt.saveNote",
					"group": "inline@2",
					"when": "commentController == comment-mdt"
				}
			]
		}
	},
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"compile": "npm-run-all compile:*",
		"watch": "npm-run-all -p watch:*",
		"compile:extension": "rm -rf out && tsc --jsx react -p ./",
		"compile:views": "webpack --mode development",
		"watch:extension": "tsc --jsx react -watch -p ./",
		"watch:views": "webpack --watch --mode development",
		"test": "npm run compile && vscode-test",
		"pretest": "npm run compile && npm run lint",
		"lint": "eslint src --ext ts",
		"test2": "vscode-test"
	},
	"devDependencies": {
		"@types/vscode": "^1.19.0",
		"@types/mocha": "^10.0.7",
		"@types/node": "20.x",
		"@typescript-eslint/eslint-plugin": "^7.14.1",
		"@typescript-eslint/parser": "^7.11.0",
		"eslint": "^8.57.0",
		"typescript": "^5.4.5",
		"@vscode/test-cli": "^0.0.9",
		"@vscode/test-electron": "^2.4.0",


		"@types/marked": "^2.0.2",
		"@types/react": "^16.9.0",
		"@types/react-dom": "^16.9.0",
		"css-loader": "^3.0.0",
		"npm-run-all": "^4.1.5",
		"style-loader": "^0.23.1",
		"ts-loader": "^6.0.4",
		"tslint": "^5.12.1",
		"webpack": "^4.35.2",
		"webpack-cli": "^3.3.5"
	},
	"dependencies": {
		"axios": "^1.7.2",
		"hasbin": "^1.2.3",

		"marked": "^2.0.4",
		"react": "^16.13.0",
		"react-autosize-textarea": "^7.0.0",
		"react-beautiful-dnd": "^13.0.0",
		"react-dom": "^16.13.0",
		"react-select": "^3.1.0",
		"react-simple-code-editor": "^0.11.0",
		"styled-components": "^5.0.1"
	},
	"activationEvents": [
		"onStartupFinished"
	]
}
