{
	"name": "deeplink",
	"displayName": "My Dev Tools Kit",
	"description": "Open Deep link, Push Notification, Screen Mirroring, WIFI connection, Virtual Device Management, Gist, Kanban Board, Notes, Timer, Games, Sounds, etc.",
	"version": "0.0.26",
	"publisher": "emanuel-braz",
	"repository": {
		"type": "git",
		"url": "https://github.com/emanuel-braz/my_dev_tools"
	},
	"icon": "images/icon.png",
	"engines": {
		"vscode": "^1.29.0"
	},
	"categories": [
		"Other",
		"Snippets",
		"Debuggers",
		"Formatters",
		"Keymaps",
		"Linters",
		"Themes",
		"Extension Packs",
		"Programming Languages"
	],
	"keywords": [
		"todo",
		"todolist",
		"kanban",
		"task",
		"project",
		"management",
		"generate",
		"generator",
		"template",
		"webdev",
		"snippet",
		"file",
		"agile",
		"game"
	],
	"main": "./out/extension.js",
	"contributes": {
		"configuration": [
			{
				"type": "object",
				"title": "Task Board Settings",
				"properties": {
					"mdt.taskBoard.fileList": {
						"type": "string",
						"description": "Comma-separated list of files to be displayed on the task board."
					}
				}
			},
			{
				"title": "Barrel File Generator",
				"properties": {
					"mdt.barrelFileGenerator.defaultBarrelName": {
						"title": "Default barrel file name",
						"type": [
							"string",
							"null"
						],
						"default": null,
						"markdownDescription": "The default name for the barrel file is `<folder-name>.dart`. You can override this name by setting a custom name. If there's any whitespace in the name it will be replaced by a '-' and the name **will be transformed to lowercase**."
					},
					"mdt.barrelFileGenerator.promptName": {
						"title": "Open input on file generation",
						"type": "boolean",
						"default": false,
						"description": "Get promted asking for the name of the barrel file that will be created"
					},
					"mdt.barrelFileGenerator.excludeFileList": {
						"title": "Additional patterns to exclude files",
						"type": "array",
						"default": [],
						"description": "Add the file patterns that you want to exclude (as glob patterns). Excluded files will not be added to the barrel file."
					},
					"mdt.barrelFileGenerator.excludeDirList": {
						"title": "Additional patterns to exclude directories",
						"type": "array",
						"default": [],
						"description": "Add the directory patterns that you want to exclude (as glob patterns). A barrel file will not be generated for these directories."
					},
					"mdt.barrelFileGenerator.prependFolderName": {
						"title": "Prepend name of the folder to the generated file",
						"type": "boolean",
						"default": false,
						"markdownDescription": "Prepend the name of the folder to the generated files, e.g.: `<folder-name>_<barrel-file>.dart`."
					},
					"mdt.barrelFileGenerator.appendFolderName": {
						"title": "Append name of the folder to the generated file",
						"type": "boolean",
						"default": false,
						"markdownDescription": "Append the name of the folder to the generated files, e.g.: `<barrel-file>_<folder-name>.dart`."
					},
					"mdt.barrelFileGenerator.skipEmpty": {
						"title": "Skip empty folders",
						"type": "boolean",
						"default": true,
						"description": "Skip generating barrel files for folders that are empty (or do not contain any valid file)"
					},
					"mdt.barrelFileGenerator.allowNotSupportedLanguages": {
						"title": "Allow not supported languages",
						"type": "boolean",
						"default": false,
						"description": "Allowing the generation of barrel file for languages that are not supported can lead to unexpected results."
					}
				}
			},
			{
				"title": "Dart Barrel File",
				"properties": {
					"mdt.barrelFileGenerator.excludeGenerated": {
						"title": "Exclude generated (.g.dart) files",
						"type": "boolean",
						"default": true,
						"markdownDescription": "Exclude `.g.dart` files"
					},
					"mdt.barrelFileGenerator.excludeFreezed": {
						"title": "Exclude freezed (.freezed.dart) files",
						"type": "boolean",
						"default": true,
						"markdownDescription": "Exclude `.freezed.dart` files"
					},
					"mdt.barrelFileGenerator.prependPackageToLibExport": {
						"title": "Append package name to lib exports",
						"type": "boolean",
						"default": false,
						"markdownDescription": "It will prepend `package:<package-name>/...` as a prefix of the export exclusively for the root file under `lib/`. It detects the name of the package by analysing the path of the project."
					}
				}
			},
			{
				"title": "Typescript Barrel Files",
				"properties": {
					"mdt.barrelFileGenerator.includeTsxFiles": {
						"title": "Include `.tsx` files",
						"type": "boolean",
						"default": true,
						"markdownDescription": "Include `TypeScript JSX (.tsx)` files"
					},
					"mdt.barrelFileGenerator.excludeTypescriptDeclaration": {
						"title": "Exclude TypeScript Declaration (.d.ts) files",
						"type": "boolean",
						"default": true,
						"markdownDescription": "Exclude `.d.ts` files"
					}
				}
			}
		],
		"commands": [
			{
				"category": "MDT",
				"title": "Open deep link (Android ü§ñ)",
				"command": "extension.androidDeeplink"
			},
			{
				"category": "MDT",
				"title": "Open deep link (iOS üçé)",
				"command": "extension.iosDeeplink",
				"enablement": "isMac"
			},
			{
				"category": "MDT",
				"title": "Clear the deeplink history",
				"command": "extension.deeplinkClearCache"
			},
			{
				"category": "MDT",
				"title": "Open the latest used deeplink",
				"command": "extension.lastPromptDeeplink",
				"enablement": "false"
			},
			{
				"category": "MDT",
				"title": "Send push notification (iOS üçé)",
				"command": "extension.iosPushNotification",
				"enablement": "isMac"
			},
			{
				"category": "MDT",
				"title": "Send push notification (Android ü§ñ)",
				"command": "extension.androidPushNotification"
			},
			{
				"category": "MDT",
				"title": "Send the latest used notification",
				"command": "extension.pushNotificationLastUsed"
			},
			{
				"category": "MDT",
				"title": "Mirror device screen (Android ü§ñ)",
				"command": "extension.androidMirrorScreen"
			},
			{
				"category": "MDT",
				"title": "Start Device (Android ü§ñ)",
				"command": "extension.startAndroidDevice"
			},
			{
				"category": "MDT",
				"title": "Start Device (iOS üçé)",
				"command": "extension.startIosDevice",
				"enablement": "isMac"
			},
			{
				"category": "MDT",
				"title": "Connect Wifi (Android ü§ñ)",
				"command": "extension.connectWifi"
			},
			{
				"category": "MDT",
				"title": "Disconnect Wifi (Android ü§ñ)",
				"command": "extension.disconnectWifi"
			},
			{
				"category": "MDT",
				"title": "Reconnect offline devices (Android ü§ñ)",
				"command": "extension.reconnectOfflineWifi"
			},
			{
				"category": "MDT",
				"title": "Show active devices",
				"command": "extension.showConnectedDevices"
			},
			{
				"category": "MDT",
				"title": "Run Project Gist (gist.json)",
				"command": "extension.runGistFromDisk"
			},
			{
				"category": "MDT",
				"title": "Run Gist Url",
				"command": "extension.runGistUrl"
			},
			{
				"category": "MDT",
				"title": "Run Public Gist User",
				"command": "extension.runGistFromUser"
			},
			{
				"category": "MDT",
				"title": "Run Favorite Gist",
				"command": "extension.runFavoriteGist"
			},
			{
				"category": "MDT",
				"title": "Update Favorite Gist",
				"command": "extension.setFavoriteGist"
			},
			{
				"category": "MDT",
				"title": "Clear Favorite Gist",
				"command": "extension.clearFavoriteGist"
			},
			{
				"category": "MDT",
				"title": "Open Task Board ‚úÖ",
				"command": "extension.openTaskBoard"
			},
			{
				"category": "MDT",
				"title": "Play Messenger Sound üéµ",
				"command": "extension.showSoundPicker"
			},
			{
				"category": "MDT",
				"command": "extension.startTimer",
				"title": "Start Timer ‚è±Ô∏è"
			},
			{
				"category": "MDT",
				"command": "extension.stopTimer",
				"title": "Stop Timer ‚è±Ô∏è"
			},
			{
				"category": "MDT",
				"command": "extension.cancelTimer",
				"title": "Cancel Timer ‚è±Ô∏è"
			},
			{
				"category": "MDT",
				"command": "extension.startGameDino",
				"title": "Play T-Rex Runner ü¶ñ"
			},
			{
				"category": "MDT",
				"command": "extension.startTictactoe",
				"title": "Play Tic Tac Toe üéÆ"
			},
			{
				"category": "MDT",
				"command": "extension.refreshMainPanel",
				"title": "Refresh"
			},
			{
				"category": "MDT",
				"command": "extension.openNotes",
				"title": "Open My Notes Board üìù"
			},
			{
				"category": "MDT",
				"command": "extension.generateCurrent",
				"title": "MDT: Generate a single barrel file for the selected folder only"
			},
			{
				"category": "MDT",
				"command": "extension.generateCurrentWithSubfolders",
				"title": "MDT: Generate a single barrel file for all files in subfolders"
			},
			{
				"category": "MDT",
				"command": "extension.generateCurrentAndNested",
				"title": "MDT: Generate barrel files for each subfolder (nested)"
			}
		],
		"menus": {
			"commandPalette": [
				{
					"command": "extension.cancelTimer",
					"when": "false"
				},
				{
					"command": "extension.refreshMainPanel",
					"when": "false"
				},
				{	
					"command": "extension.generateCurrent",
					"when": "false"
				},
				{
					"command": "extension.generateCurrentWithSubfolders",
					"when": "false"
				},
				{
					"command": "extension.generateCurrentAndNested",
					"when": "false"
				}
			],
			"view/title": [
				{
					"command": "extension.refreshMainPanel",
					"when": "view == mainSidePanel",
					"group": "navigation"
				}
			],
			"explorer/context": [
				{
					"command": "extension.generateCurrent",
					"group": "2_click",
					"when": "explorerResourceIsFolder"
				},
				{
					"command": "extension.generateCurrentWithSubfolders",
					"group": "2_click",
					"when": "explorerResourceIsFolder"
				},
				{
					"command": "extension.generateCurrentAndNested",
					"group": "2_click",
					"when": "explorerResourceIsFolder"
				}
			]
		},
		"views": {
			"sidePanel": [
				{
					"id": "mainSidePanel",
					"name": "View",
					"type": "webview"
				}
			]
		},
		"viewsContainers": {
			"activitybar": [
				{
					"id": "sidePanel",
					"title": "My Dev Tools",
					"icon": "$(tools)"
				}
			]
		}
	},
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"compile": "npm-run-all compile:*",
		"watch": "npm-run-all -p watch:*",
		"compile:extension": "rm -rf out && tsc --jsx react -p ./",
		"compile:views": "webpack --mode development",
		"watch:extension": "tsc --jsx react -watch -p ./",
		"watch:views": "webpack --watch --mode development",
		"test": "npm run compile && vscode-test",
		"pretest": "npm run compile && npm run lint",
		"lint": "eslint src --ext ts",
		"test2": "vscode-test",
		"start:notes-app": "cd src/features/notes/webview && npm start"
	},
	"devDependencies": {
		"@types/vscode": "^1.19.0",
		"@types/mocha": "^10.0.7",
		"@types/node": "20.x",
		"@typescript-eslint/eslint-plugin": "^7.14.1",
		"@typescript-eslint/parser": "^7.11.0",
		"eslint": "^8.57.0",
		"typescript": "^5.4.5",
		"@vscode/test-cli": "^0.0.9",
		"@vscode/test-electron": "^2.4.0",
		"@types/marked": "^2.0.2",
		"@types/react": "^16.9.0",
		"@types/react-dom": "^16.9.0",
		"css-loader": "^3.0.0",
		"npm-run-all": "^4.1.5",
		"style-loader": "^0.23.1",
		"ts-loader": "^6.0.4",
		"tslint": "^5.12.1",
		"webpack": "^4.35.2",
		"webpack-cli": "^3.3.5"
	},
	"dependencies": {
		"axios": "^1.7.2",
		"hasbin": "^1.2.3",
		"marked": "^2.0.4",
		"react": "^18.0.0",
		"react-scripts": "^5.0.1",
		"react-autosize-textarea": "^7.0.0",
		"react-beautiful-dnd": "^13.0.0",
		"react-dom": "^18.0.0",
		"react-select": "^3.1.0",
		"react-simple-code-editor": "^0.11.0",
		"styled-components": "^5.0.1",
		"play-sound": "^1.1.6",
		"nanoid": "^3.1.20"
	},
	"activationEvents": [
		"onStartupFinished"
	],
	"private": true,
	"workspaces": [
		"src/*"
	]
}